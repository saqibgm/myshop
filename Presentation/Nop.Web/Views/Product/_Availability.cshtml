@model ProductDetailsModel
@using Nop.Core.Domain.Customers
@inject Nop.Core.IWorkContext workContext

<style>
    .dot {
        height: 20px;
        width: 20px;
        border-radius: 50%;
        display: inline-block;
        vertical-align: bottom;
        margin-left: 5px;
    }

        .dot.g {
            background-color: green;
        }

        .dot.r {
            background-color: red;
        }

        .dot.y {
            background-color: yellow;
        }
</style>
@if (workContext.CurrentCustomer.IsRegistered() && Model.DisplayStockAvailability)
{
    var stockColor = "while";
    var stockStatus = "";
    @if (Model.StockQuantity.HasValue && Model.StockQuantity <= 0)
    {
        stockColor = "r";
        stockStatus = T("Products.Availability.OutOfStock").Text;
    }
    else if (Model.StockQuantity.HasValue && Model.StockQuantity <= Model.MinStockQuantity)
    {
        stockColor = "y";
        stockStatus = T("Products.Availability.LowInStock").Text;
    }
    else if (Model.StockQuantity.HasValue && Model.StockQuantity > Model.MinStockQuantity)
    {
        stockColor = "g";
        stockStatus = T("Products.Availability.AvailableInStock").Text;
    }
    <div class="availability">
        <div class="stock">
            <span class="label">@T("Products.Availability"):</span>
            <span class="value" id="stock-availability-value-@Model.Id">@stockStatus </span><span class="dot @stockColor"></span>
        </div>
    </div>
}