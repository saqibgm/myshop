@*@model IList<CustomerModel.CustomerAttributeModel>*@
@model CustomerModel
@using Nop.Web.Framework.Controllers;

@using Nop.Core.Domain.Catalog;
@using Nop.Core.Domain.Customers;
@using Nop.Core
@inject IWorkContext workContext;
@{
    var currentCustomer = workContext.CurrentCustomer;
}
@foreach (var attribute in Model.CustomerAttributes)
{
    var attId = attribute.Id;
    var tCol = (attId >= 10 && attId <= 21) ? 6 : ((attId == 8 || attId == 9) ? 4 : 2);
    var vCol = (attId >= 10 && attId <= 21) ? 6 : ((attId == 8 || attId == 9) ? 8 : 10);
    var col = (attId >= 10 && attId <= 21) ? 4 : 6;
    var mCls = (attId == 8 || attId == 9 ) ? "" : "form-group";

    if ((attId == 3 && !currentCustomer.IsSaleman()) && Model.IsCustomer ||
        (attId == 22 && !currentCustomer.IsSaleman()) && Model.IsCustomer ||
        ((attId == 4 || (attId >= 10 && attId <= 21)) && Model.IsCustomer) ||
        ((attId == 8 || attId == 9)))
    //((attId == 8 || attId == 9) && Model.IsSalesman))
    {
        var controlId = $"{NopAttributePrefixDefaults.Customer}{attId}";
        var textPrompt = attribute.Name;
        if (attId == 8)
        {
            @:<div class="form-group">
        }
        else if (attId == 10)
        {
            @:<div class="form-group" style="padding:0 15px 0 3px">
        }

                @if (attId == 8 || attId == 9 || attId == 10 || attId == 14 || attId == 18)
                {
                    @:<div class='col-md-@col' style="padding:0;">
                    }
                <div class='@mCls'>
                    <div class="col-md-@tCol">
                        <div class="label-wrapper">
                            <label class="control-label">
                                @textPrompt
                            </label>
                        </div>
                    </div>
                    <div class="col-md-@vCol">
                        @switch (attribute.AttributeControlType)
                        {
                            case AttributeControlType.DropdownList:
                                {
                                    <select name="@(controlId)" id="@(controlId)" class="form-control">
                                        @if (!attribute.IsRequired)
                                        {
                                            <option value="0">---</option>
                                        }
                                        @foreach (var attributeValue in attribute.Values)
                                        {
                                            <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                                        }
                                    </select>
                                }
                                break;
                            case AttributeControlType.RadioList:
                                {
                                    foreach (var attributeValue in attribute.Values)
                                    {
                                        <div class="radio">
                                            <label>
                                                <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                                @attributeValue.Name
                                            </label>
                                        </div>
                                    }
                                }
                                break;
                            case AttributeControlType.Checkboxes:
                            case AttributeControlType.ReadonlyCheckboxes:
                                {
                                    foreach (var attributeValue in attribute.Values)
                                    {
                                        <div class="checkbox">
                                            <label>
                                                <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected"
                                                       @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                                                @attributeValue.Name
                                            </label>
                                        </div>
                                    }
                                }
                                break;
                            case AttributeControlType.TextBox:
                                {
                                    <input name="@(controlId)" type="text" id="@(controlId)" value="@attribute.DefaultValue" class="form-control" />
                                }
                                break;
                            case AttributeControlType.MultilineTextbox:
                                {
                                    <textarea id="@(controlId)" class="form-control" name="@(controlId)">@attribute.DefaultValue</textarea>
                                }
                                break;
                            case AttributeControlType.Datepicker:
                            case AttributeControlType.FileUpload:
                            case AttributeControlType.ColorSquares:
                            case AttributeControlType.ImageSquares:
                                {
                                    //not support attribute type
                                }
                                break;
                        }
                    </div>
                </div>
                @if (attId == 8 || attId == 9 || attId == 13 || attId == 17 || attId == 21)
                {
                @:</div>
            }
                if (attId == 9 || attId == 21)
                {
                @:</div>
            }

        }
    }
