@using Nop.Services.Stores
@model CustomerModel
@inject IStoreService storeService
<div class="panel-body">
    @await Html.PartialAsync("Table", new DataTablesModel
{
    Name = "commission-grid",
    UrlRead = new DataUrl("SalemanCommissionList", "Customer", new RouteValueDictionary { [nameof(Model.CustomerCommissionSearchModel.SalemanId)] = Model.CustomerCommissionSearchModel.SalemanId }),
    Length = Model.CustomerCommissionSearchModel.PageSize,
    LengthMenu = Model.CustomerCommissionSearchModel.AvailablePageSizes,
    ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty(nameof(CustomerCommissionModel.CommissionMonthStr))
            {
                Title = T("Admin.Saleman.Commission.CommissionMonth").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.TotalOrders))
            {
                Title = T("Admin.Saleman.Commission.TotalOrders").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.TotalSaleStr))
            {
                Title = T("Admin.Saleman.Commission.TotalSale").Text,
                Width = "100",
                Render = new RenderCustom("renderColumnOrderStatus")
            },
            new ColumnProperty(nameof(CustomerCommissionModel.TotalProfitStr))
            {
                Title = T("Admin.Saleman.Commission.TotalProfit").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.BasicSalary))
            {
                Title = T("Admin.Saleman.Commission.BasicSalary").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.CommissionPercentage))
            {
                Title = T("Admin.Saleman.Commission.CommissionPercentage").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.CommissionMinTargertStr))
            {
                Title = T("Admin.Saleman.Commission.CommissionMinTargert").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.TotalCommissionStr))
            {
                Title = T("Admin.Saleman.Commission.TotalCommission").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.TotalSalaryStr))
            {
                Title = T("Admin.Saleman.Commission.TotalSalary").Text,
                Width = "100"
            },
            new ColumnProperty(nameof(CustomerCommissionModel.Id))
            {
                Title = T("Admin.Saleman.Commission.ReCalculate").Text,
                Width = "50",
                //ClassName = "fa fa-refresh",
                ClassName =  NopColumnClassDefaults.Button,
                //Render = new RenderButtonCustom("fa fa-refresh","","/Admin/Customer/ReCalcCommission/") ,
                Render = new RenderCustom("renderRefresh")
                //new DataUrl("~/Admin/Customer/ReCalcCommission/"))
            },
            //new ColumnProperty(nameof(CustomerCommissionModel.Id))
            //{
            //    Title = T("Admin.Common.View").Text,
            //    Width = "100",
            //    ClassName = NopColumnClassDefaults.Button,
            //    Render = new RenderButtonEdit(new DataUrl("~/Admin/Order/Edit/"))
            //}
        }
});
    <script>
        function renderColumnOrderStatus(data, type, row, meta) {
            var color;
            switch (row.OrderStatusId) {
                case 10: color = 'yellow'; break;
                case 20: color = 'blue'; break;
                case 30: color = 'green'; break;
                case 40: color = 'red'; break;
            }
            return '<span class="grid-report-item ' + color + '">' + data + '</span >';
        }

        function renderRefresh(data, type, row, meta) {
            var btn = "";
            if (new Date(row.CommissionMonth).getFullYear() == new Date().getFullYear() && new Date(row.CommissionMonth).getMonth()+1 >= new Date().getMonth()) {
                btn = "<a class='fa fa-refresh' href='/Admin/Customer/ReCalcCommission/" + data+"'></a>";
            }
            return btn;
        }
    </script>
</div>
