@model CustomerAddressModel
@using Nop.Core;
@using Nop.Core.Infrastructure;
@{
    //page title
    ViewBag.Title = T("Admin.Customers.Customers.Addresses.EditAddress").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Customers list");
    var user = EngineContext.Current.Resolve<IWorkContext>().CurrentCustomer;
    var allowed = user.CustomerRoles.Any(r => r.Name == "Administrators" || r.Name == "Saleman" || r.Name == "Manager");
}
<script>
    $(document).ready(function () {
        if (@Model.Address.CustomAddressAttributes.FirstOrDefault(a=>a.Name=="Billing Address").Values[0].IsPreSelected.ToString().ToLower() == true && !allowed) {
            $("form :input").attr("disabled", "true").css("background-color", "lightgray");
            $("form :submit").hide();
        }
    })
</script>
<form asp-controller="Customer" asp-action="AddressEdit" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Customers.Customers.Addresses.EditAddress")
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="Edit" asp-route-id="@Model.CustomerId">@T("Admin.Customers.Customers.Addresses.BackToCustomer")</a>
            </small>
        </h1>
        <div class="pull-right">
            <button type="submit" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CustomerAddressDetailsButtons, additionalData = Model })
        </div>
    </div>
    @await Html.PartialAsync("_CreateOrUpdateAddress", Model)
</form>